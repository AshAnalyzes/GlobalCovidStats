/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Window Functions, Aggregate Functions

*/

Select *
From `spatial-motif-388503.Covid.Deaths`
Where continent is not null 
order by 3,4

-- Select Data that we are going to be starting with

Select Location, date, total_cases, new_cases, total_deaths, population
From P`spatial-motif-388503.Covid.Deaths`
Where continent is not null 
order by 1,2

-- Finding total cases, total deaths and death percentage
-- Shows likelihood of dying if you contract covid in your country

Select SUM(new_cases) as total_cases, 
      SUM((new_deaths) as total_deaths, 
      SUM(new_deaths)/SUM(New_Cases)*100 as DeathPercentage
From `spatial-motif-388503.Covid.Deaths`
where continent is not null 
order by 1,2

-- Finding total death count by location. Had to exclude certain location variables as we only want countries. 

Select location, 
      SUM(new_deaths) as TotalDeathCount
From `spatial-motif-388503.Covid.Deaths`
Where continent is null 
and location not in ('World', 'European Union', 'International', 'High income', 'Upper middle income', 'Lower middle income', 'Low income', 'Lower middle income')
Group by location
order by TotalDeathCount desc

-- Finding percent of population who died from COVID by country

Select Location, 
      Population, 
      MAX(total_deaths) as HighestDeathCount,  
      Max((total_deaths/population))*100 as PercentPopulationDied
From `spatial-motif-388503.Covid.Deaths`
Group by Location, Population
order by PercentPopulationDied desc

-- Finding rolling number of total vaccinations per capita by country

With PopVac AS 
(
 SELECT deaths.continent,
      deaths.location,
      deaths.date,
      deaths.population,
      vacc.new_vaccinations,
      SUM(vacc.new_vaccinations) OVER (Partition BY deaths.location ORDER BY deaths.location, deaths.date) as RollingTotalVacs
FROM `spatial-motif-388503.Covid.Deaths` deaths
JOIN `spatial-motif-388503.Covid.Vaccinations` vacc 
ON deaths.location = vacc.location 
AND deaths.date=vacc.date 
WHERE deaths.continent IS NOT NULL
)
SELECT *, 
      (RollingTotalVacs/Population) as RollingVacsPerCapita
From PopVac

